---

- name: check oh-my-zsh
  stat:
    path: "{{ ansible_env.HOME }}/.oh-my-zsh"
  register: ohmyzsh_dir

- name: check zsh
  command: which zsh
  register: zsh_check
  ignore_errors: yes
  no_log: true
  failed_when: zsh_check.rc != 0

- name: install zsh amz
  become: true
  become_method: sudo
  register: zsh_install
  command: yum install zsh -y
  when: ansible_distribution == 'Amazon' and zsh_check.failed

- name: install zsh ubuntu
  become: true
  become_method: sudo
  register: zsh_install
  command: apt-get install zsh -y
  when: ansible_distribution == 'Ubuntu' and zsh_check.failed
  
- name: get oh-my-zsh installer
  command: curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -o /tmp/ohmyzsh-install.sh
  when: not ohmyzsh_dir.stat.exists

- name: change execute mode
  become: true
  become_method: sudo
  command: chmod +x /tmp/ohmyzsh-install.sh
  when: not ohmyzsh_dir.stat.exists

- name: install oh-my-zsh
  command: /tmp/ohmyzsh-install.sh
  when: not ohmyzsh_dir.stat.exists

- name: get .zshrc
  command: curl {{ zshrc_url}} -o {{ ansible_env.HOME }}/.zshrc

- name: remove ohmyzsh plugins
  command: rm -rf {{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/{{ item }}
  with_items: "{{ zsh_plugins }}"

- name: install ohmyzsh plugins
  command: git clone https://github.com/zsh-users/{{ item }}.git {{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/{{ item }} --depth=1
  with_items: "{{ zsh_plugins }}"

- name: set zsh as default shell
  become: true
  become_method: sudo
  command: chsh -s /bin/zsh {{ ansible_env.USER }}

